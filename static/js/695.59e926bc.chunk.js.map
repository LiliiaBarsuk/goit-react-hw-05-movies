{"version":3,"file":"static/js/695.59e926bc.chunk.js","mappings":"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","sources":["Api.js","Pages/Home/Home.styled.jsx","components/SearchForm/SearchForm.jsx","Pages/Movies.jsx","components/MoviesList/MoviesList.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const KEY = 'd235d9d84008e448e946d307df920be3';\n\nexport const fetchTrendingToday = () => {\n   return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`)\n    .then(response => response.json()).then(data => data.results)\n};\n\nexport const fetchListByQuery = (queryValue) => {\n    return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${queryValue}&page=1&include_adult=false`)\n    .then(response => response.json()).then(data => data.results)\n}\n\nexport const fetchMovieById = (id) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`)\n    .then(r => r.json()).then(data => data)\n}\n\nexport const fetchCastById = (id) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    .then(r => r.json()).then(data => data.cast)\n}\n\nexport const fetchReviewsById = (id) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    .then(r => r.json()).then(data => data.results)\n}","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n   padding: 20px; \n`;","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [searchValue, setSearchValue] = useState('');\n\n    const saveInputValue = e => {\n        setSearchValue(e.currentTarget.value.toLowerCase());\n    };\n\n    const submitForm = e => {\n        e.preventDefault();\n        if (searchValue.trim() === '') {\n            return\n        } \n        onSubmit(searchValue);\n        setSearchValue('');\n    }\n    \n    return (\n        <form onSubmit={submitForm}>\n            <input type=\"text\" onChange={saveInputValue} value={searchValue}/>\n            <button type=\"submit\">Search</button>\n        </form>)\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import { fetchListByQuery } from \"Api\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\"\nimport { useEffect, useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport { Container } from \"./Home/Home.styled\";\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams('');\n    const query = searchParams.get('query');\n    const [searchValue, setSearchValue] = useState(query ? query : '');\n    const [moviesArray, setMoviesArray] = useState([]);\n    useEffect(() => {\n       async function fetchMoviesList (value) {\n        try {\n            const moviesArray = await fetchListByQuery(value);\n            setMoviesArray([...moviesArray]);\n        } catch(error) {\n            console.log(error);\n        }\n           \n       }\n    \n       if (searchValue === '') {\n          return  \n       }\n       fetchMoviesList(searchValue)\n    \n    }, [searchValue])\n\n    const saveSearchValue = (value) => {\n        if(value === '') {\n        return\n        }\n\n        setSearchValue(value);\n        setSearchParams({ query: value })\n\n    };\n    \n    return (\n        <main>\n        <Container>\n        <SearchForm onSubmit={saveSearchValue}/>\n        <MoviesList movies={moviesArray}/>        \n        </Container>\n        </main>\n    )\n}\n\nexport default Movies;","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n   \n    function createUrl(location, movie) {\n        let urlPath\n\n        if (location.pathname !== '/movies') {\n            urlPath = `/movies/${movie.id}`\n        } else {\n            urlPath = `${movie.id}`\n        }\n        \n        return urlPath\n        \n    }\n\n    return (\n        <ul>\n            {movies.map(movie => {\n                return <li key={movie.id}><Link to={createUrl(location, movie)} state={{ from: location }}>{movie.title}</Link></li>\n            })}\n                \n            </ul>\n    )\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.array.isRequired,\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["KEY","fetchTrendingToday","fetch","then","response","json","data","results","fetchListByQuery","queryValue","fetchMovieById","id","r","fetchCastById","cast","fetchReviewsById","Container","styled","SearchForm","onSubmit","useState","searchValue","setSearchValue","e","preventDefault","trim","type","onChange","currentTarget","value","toLowerCase","useSearchParams","searchParams","setSearchParams","query","get","moviesArray","setMoviesArray","useEffect","console","log","fetchMoviesList","MoviesList","movies","location","useLocation","createUrl","movie","pathname","map","to","state","from","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}